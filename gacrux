#!/usr/bin/env bash
# stuff
black="\e[38;5;8m"
red="\e[38;5;1m"
green="\e[38;5;2m"
yellow="\e[38;5;3m"
bold="\e[1m"
italic="\e[3m"
nc="\e[m"

trap 'printf "\e[2K\e[2C${green}${bold}Wise choice.\n" && exit' INT

ok() {
    pre_ok="$bold${black}[${green}OK${black}]${nc}: $italic"
    if [ $# -ge 2 ]; then
        pre_ok="$bold${black}[${green}${2}${black}]${nc}: $italic"
    fi
    echo -en $pre_ok"${1}${nc}"
}

err() {
    pre_err="$bold${black}[${red}ERR${black}]${nc}: $italic"
    if [ $# -ge 2 ]; then
        pre_err="$bold${black}[${red}${2}${black}]${nc}: $italic"
    fi
    echo -en $pre_err"${1}${nc}"
}

ask() {
    pre_ask="$bold${black}[${yellow}ASK${black}]${nc}: $italic"
    if [ $# -ge 2 ]; then
        pre_ask="$bold${black}[${yellow}${2}${black}]${nc}: $italic"
    fi
    echo -en $pre_ask"${1}${nc}"
}

if [ -z $1 ]; then
    echo -e "${red}${bold}DO NOT UTILIZE THIS WITHOUT READING THE SCRIPT!"$nc
    sleep 1
    echo -e "${red}${bold}I WILL NOT BE RESPONSIBLE IF THIS BREAKS STUFF!"$nc
    sleep 2
fi

echo -e "\e[2J\e[H"
echo -e "Welcome to\n"
sleep 1
echo -e "▞▀▖               ▞▀▖         ▗    "
echo -e "▌▄▖▝▀▖▛▚▀▖▛▚▀▖▝▀▖ ▌  ▙▀▖▌ ▌▞▀▖▄ ▞▀▘"
echo -e "▌ ▌▞▀▌▌▐ ▌▌▐ ▌▞▀▌ ▌ ▖▌  ▌ ▌▌ ▖▐ ▝▀▖"
echo -e "▝▀ ▝▀▘▘▝ ▘▘▝ ▘▝▀▘ ▝▀ ▘  ▝▀▘▝▀ ▀▘▀▀ "
sleep 1
echo -e "short: \"Gacrux\""

#live
loadkeys de-latin1
if [ -d /sys/firmware/efi/efivars ]; then
    ok "Detected.\n" "EFI"
else
    ok "Undetected.\n" "EFI"
fi
timedatectl set-ntp true
if ! ping -c3 archlinux.org -W3 &> /dev/null; then
    err "Failure.\n" "PING"
else
    ok "Success.\n" "PING"
fi
lsblk
ask "Enter Drive: " "!DRIVE"
read drive
cfdisk $drive
lsblk
ask "Enter ROOT Partition: "
read root_part
while [ -z $root_part ]; do
    err "$root_part doesn't exist\nUnfortunately, you can't install stuff on something inexistent."
    ask "Enter ROOT Partition: "
    read root_part
done
mkfs.btrfs -f -L "root_pool" $root_part
mount $root_part /mnt/
btrfs subvolume create /mnt/@
umount $root_part
mount -o rw,noatime,compress=zstd:3,subvol=/@ $root_part /mnt/

ask "Did you create an EFI partition? [y/n]" "EFI"
read efi
if [[ ${efi,,} = "y"* ]]; then
    lsblk
    ask "Enter EFI Partition (exp: /dev/sda1): " "EFI"
    read efi_part
    while ! blkid $efi_part &> /dev/null; do
        err "$efi_part does not exist" "EFI"
        lsblk
        ask "Enter EFI Partition (exp: /dev/sda1): " "EFI"
        read efi
    done
    mkfs.fat -F32 $efi_part
    mkdir -p /mnt/boot
    mount $efi_part /mnt/boot
fi

ask "Did you create a SWAP partition? [y/n]" "SWAP"
read swap_part
if [[ ${swap_part,,} = "y"* ]]; then
    lsblk
    ask "Enter Swap Partition (exp: /dev/sda2): " "SWAP"
    read swap
    while ! blkid $swap &> /dev/null; do
        err "$swap does not exist" "SWAP"
        lsblk
        ask "What is the name of your SWAP Partition" "SWAP"
        read swap
    done
    mkswap $swap
    swapon $swap
fi

ask "Did you create a HOME partition? [y/n]" "HOME"
read home_part
if [[ ${home_part,,} = "y"* ]]; then
    lsblk
    ask "Enter home Partition (exp: /dev/sda2): " "HOME"
    read home
    while ! blkid $home_part &> /dev/null; do
        err "$home_part does not exist" "HOME"
        lsblk
        ask "What is the name of your HOME Partition" "HOME"
        read home
    done
    mkfs.btrfs -f -L "home_pool" $home_part
    mkdir -p /mnt/home
    mount $home_part /mnt/home
    btrfs subvolume create /mnt/home/@home
    umount $home_part
    mount -o rw,noatime,compress=zstd:3,subvol=/@home $home_part /mnt/home
fi
echo -e "${yellow}${bold}Please be patient, whilst the mirrors are getting synced."$nc
reflector --latest 20 --sort rate --save /etc/pacman.d/mirrorlist --protocol https --download-timeout 1
if [ $? -eq 0 ]; then
    ok "Synced." "MIRROR"
else
    err "Sync failed. Error Code: $?" "MIRROR"
fi
sleep 2
ok "Pacstrapping..." "PACSTRAP"
pacstrap /mnt/ base base-devel linux linux-firmware neovim dhcpcd networkmanager btrfs-progs zstd sed

genfstab -U /mnt >> /mnt/etc/fstab
